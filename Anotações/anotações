        // TRATAMENTO DE DADOS 04/02/2024
        
        // (number + number) - number para adição
        // (number + string) - string para concatenação

        // number - numero real (inteiro ou decimal)
        // parseInt() - converte string para inteiro
        // parseFloat() - converte string para decimal
        // String() - converte número para string
        // .toString() - converte número para string

        // ${} - interpolação de string - template string (crase)

        // .length - propriedade que retorna o tamanho de uma string (caracteres)
        // .toUpperCase() - método que converte string para maiúsculo
        // .toLowerCase() - método que converte string para minúsculo
        // split() - método que divide uma string em partes
        // tofixed() - método que limita o número de casas decimais
        // toLocaleString() - método que formata um número (apennas para números)
        // toLocaleString( {style: 'currency', currency: 'BRL'} ) - método que formata um número para moeda
        // "style" = tipo de formatação "currency" = moeda "currency" = tipo de moeda
        // ------------------------------------------------------------------------------------------------------------

        // OPERADORES 05/02/2024

        // OPERADORES ARITMÉTICOS
        // (+ - * / % **) - adição, subtração, multiplicação, divisão, divisão inteira, potenciação
        // ORDEM DE PRECEDÊNCIA  () -> ** -> */ % -> + - (parênteses, potenciação, multiplicação, divisão, divisão inteira, adição, subtração)
        // QUANDO HÁ OPERADORES COM A MESMA PRECEDÊNCIA, A OPERAÇÃO É EXECUTADA DA ESQUERDA PARA A DIREITA
        // AUTO-ATRIBUIÇÃO QUANDO SOMAMOS OU SUBTRAÍMOS UM VALOR A UMA VARIÁVEL E ATRIBUÍMOS O RESULTADO A MESMA VARIÁVEL
        // OPERADORES DE INCREMENTO E DECREMENTO (++) (--) - incremento e decremento de 1
        // OPERADORES DE ATRIBUIÇÃO (+= -= *= /= %=) - adição, subtração, multiplicação, divisão, divisão inteira
        // OPERADORES RELACIONAIS (< > <= >= == != === !==) - menor, maior, menor ou igual, maior ou igual, igual, diferente, igual em valor e tipo, diferente em valor e tipo
        // NUMA LINHA QUE TENHA OPERADORES ARITMÉTICOS E RELACIONAIS, OS ARITMÉTICOS SÃO EXECUTADOS PRIMEIRO
        // OPERADORES DE IDENTIDADE (=== !==) - igualdade em valor e tipo, diferença em valor e tipo
        // OPERADORES LÓGICOS (&& || !) - e, ou, não
        // ORDEM DE PRECEDÊNCIA DOS OPERADORES LÓGICOS  () -> ! -> && -> || (parênteses, não, e, ou)
        // OPERADOR LÓGICO NÃO (!) - inverte o valor de uma expressão lógica
        // OPERADOR LÓGICO E (&&) - retorna verdadeiro se as duas expressões forem verdadeiras
        // OPERADOR LÓGICO OU (||) - retorna verdadeiro se uma das expressões for verdadeira
        // NUMA LINHA QUE TENHA OPERADORES ARITMÉTICOS, RELACIONAIS E LÓGICOS, A SEQUÊNCIA DE EXECUÇÃO É A SEGUINTE: ARITMÉTICOS -> RELACIONAIS -> LÓGICOS
        // OPERADOR TERNÁRIO (condição ? expressão1 : expressão2) - operador que retorna um valor baseado em uma condição
        // -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        // DOM 06/02/2024
        
        // DOM - DOCUMENT OBJECT MODEL
        // É UMA INTERFACE QUE PERMITE ACESSAR E MANIPULAR ELEMENTOS HTML
        // É UMA REPRESENTAÇÃO DO HTML QUE PODE SER MANIPULADA PELO JAVASCRIPT
        // DÁ ACESSAR POR MARCAÇÃO, NOME, ID, CLASSE, SELETOR CSS, TAG, ATRIBUTO, ETC
        // PARA ACESSAR UM ELEMENTO ESPECÍFICO DA COLEÇÃO, É NECESSÁRIO ESPECIFICAR O ÍNDICE [0] [1] [2] [3] [4] [5] [6] [7] [8] [9] [10]
        // .innertext - propriedade que retorna o texto de um elemento
        // .innerHTML - propriedade que retorna o conteúdo HTML de um elemento
        // getElementByTagName() - retorna uma coleção de elementos com o nome da tag
        // getElementById() - retorna um elemento com o ID especificado
        // getElementsByNames() - retorna uma coleção de elementos com o nome especificado
        // getElementsByClassName() - retorna uma coleção de elementos com a classe especificada
        // querySelector() - retorna o primeiro elemento que corresponde a um seletor CSS
        // (nome da variavel).innerText = "texto" - altera o texto de um elemento
        // EVENTOS - AÇÕES QUE OCORREM EM RESPOSTA A ALGO
        // EVENTOS DE MOUSE (click, mouseover, mouseout, mousedown, mouseup, mousemove)
        // EVENTOS DE TECLADO (keydown, keyup, keypress)
        // addEventListener() - método que anexa um manipulador de eventos a um elemento no javascript
        // -------------------------------------------------------------------------------------------------------------------------------------

        // CONDIÇÕES 07/02/2024

        // CONDIÇÕES - ESTRUTURAS DE CONTROLE QUE PERMITEM DECIDIR O FLUXO DE UM PROGRAMA
        // IF - SE
        // ELSE - SENÃO